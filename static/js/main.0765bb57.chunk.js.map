{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","UserInfo","user","PostInfo","post","title","length","PostList","posts","id","getCommentById","userId","commentsFromServer","filter","postId","postsFromServer","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAQE,OAGV,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCdFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,YCNjBS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mCACY,OAATA,EACC,8BACG,cACD,mBAAGT,UAAU,WAAWE,KAAI,iBAAYO,EAAKN,OAA7C,SACGM,EAAKR,UAGR,SCNKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,EAAKC,QAGR,cAAC,EAAD,CAAUH,KAAME,EAAKF,UAGvB,mBAAGT,UAAU,iBAAb,SACGW,EAAKP,OAER,uBAC0B,IAAzBO,EAAKL,SAASO,OACb,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaP,SAAUK,EAAKL,eCpBrBQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKf,UAAU,WAAf,SACGe,EAAMR,KAAI,SAAAI,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKK,YCMxC,SAASC,EAAeC,GACtB,OAAOC,EAAmBC,QAAO,SAAAX,GAAI,OAAIA,EAAKY,SAAWH,MACpD,KAGP,IAAMH,EAAQO,EAAgBf,KAAI,SAAAI,GAAI,kCACjCA,GADiC,IAEpCF,MAZmBS,EAYDP,EAAKO,OAXhBK,EAAgBC,MAAK,SAAAf,GAAI,OAAIA,EAAKO,KAAOE,MAC3C,MAWLZ,SAAUW,EAAeN,EAAKO,UAbhC,IAAqBA,KAgBRO,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CACEe,MAAOA,QCvBbW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0765bb57.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {comment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo/CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} />\n      ))}\n    </div>\n  </>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <>\n    {user !== null ? (\n      <p>\n        {' Posted by '}\n        <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n          {user.name}\n        </a>\n      </p>\n    ) : null}\n  </>\n);\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <UserInfo user={post.user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    <hr />\n    {post.comments.length === 0 ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (\n      <CommentList comments={post.comments} />\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo/PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport usersFromServer from './api/users.json';\nimport commentsFromServer from './api/comments.json';\nimport { PostList } from './components/PostList/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(userId) {\n  return commentsFromServer.filter(user => user.postId === userId)\n    || null;\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}